---
import { skillGroups, softSkills } from '@/data/skills';
import SkillBar from './SkillBar.astro';
---

<section id="habilidades" class="py-20 bg-slate-800">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="animate-on-scroll">
      <div class="text-center mb-16">
        <h2 class="text-3xl md:text-4xl font-bold text-green-400 mb-4">
          Mis Habilidades
        </h2>
        <div class="w-24 h-1 bg-green-500 mx-auto mb-6"></div>
        <p class="text-gray-400 max-w-2xl mx-auto">
          Tecnologías y herramientas que domino para crear soluciones digitales efectivas.
        </p>
      </div>

      <!-- Habilidades Técnicas -->
      <div class="mb-16">
        <h3 class="text-2xl font-bold text-white mb-8 text-center">Habilidades Técnicas</h3>
        <div class="grid md:grid-cols-2 gap-8">
          {skillGroups.map((group) => (
            <div class="bg-slate-700 rounded-xl p-6 border border-slate-600">
              <h4 class="text-xl font-bold text-green-400 mb-6 flex items-center">
                <span class="w-2 h-2 bg-green-500 rounded-full mr-3"></span>
                {group.title}
              </h4>
              <div>
                {group.skills.map((skill) => (
                  <SkillBar skill={skill} />
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Habilidades Blandas -->
      <div>
        <h3 class="text-2xl font-bold text-white mb-8 text-center">Habilidades Blandas</h3>
        <div class="grid sm:grid-cols-2 lg:grid-cols-4 gap-8">
          {softSkills.map((skill) => (
            <div class="bg-dark-700 rounded-xl p-6 text-center hover:bg-slate-600 transition-all duration-300 card-hover border border-slate-600">
              <div class="text-4xl mb-4">{skill.icon}</div>
              <h4 class="text-lg font-bold text-white mb-2">{skill.name}</h4>
              <p class="text-gray-400 text-sm">{skill.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    
    const skillBars = document.querySelectorAll('.skill-bar');
    
    if (skillBars.length === 0) {
      return;
    }
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const bar = entry.target as HTMLElement;
          const level = bar.getAttribute('data-level');
          
          if (level) {
            setTimeout(() => {
              bar.style.setProperty('width', level + '%', 'important');
            }, 300);
          }
          observer.unobserve(entry.target);
        }
      });
    }, { 
      threshold: 0.1,
      rootMargin: '0px 0px -100px 0px'
    });

    skillBars.forEach((bar, index) => {
      observer.observe(bar);
    });
  });
</script>
